https://github.com/N1ghtStorm/N1ghtRep.git - мой репозиторий

FixedUpdate - класс для меньшего количествоа фреймов\сек

Inpit.GetAxis() - input - значит задаётся пользователем\игроком

Vector3 - типа переменной для 3D

LateUpdate ()  - вызывается 1 раз в конце фрейма

Time.deltaTime - отвечает за плавные движения
transform.Rotate(new Vector3(15, 35, 28) * Time.deltaTime);	 - тут за плавные повороты

 void OnTriggerEnter(){} - функция, вызвающая триггер со всем, у кого стоит галочка Trigger
    
	
==============================================================================================================================
//==================================Прописываем Движение персонажа=============================================================


using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class Hero : MonoBehaviour {

    // Use this for initialization
    Rigidbody2D rb;

	void Start () {
        rb = GetComponent<Rigidbody2D>();
	}
	
	// Update is called once per frame
	void Update () {
		
	}

    void FixedUpdate(){
        rb.velocity = new Vector2(Input.GetAxis("Horizontal") * 12f, rb.velocity.y);
    }
}

=============================================================================================================================
===================Прописываем Прыжок:
if(Input.GetKeyDown(KeyCode.Space))
                rb.AddForce(Vector2.up * 400);
				
=============================================================================================================================

================= Прописываем Область, проходящую которую, игрок будет спавнится =====================================================

Создадим область respawn и DieSpace. Для последнего создадим скрипт:

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class DieSpace : MonoBehaviour {

    public GameObject respawn; // Создаём публичную переменную, что бы она была "видна" в обьекте скрипта, и туда перенесём ссылку на rewpawn

    void OnTriggerEnter2D(Collider2D other)
    {
        if (other.tag == "Player")
        {
            other.transform.position = respawn.transform.position;
        }
    }


}
============================================================================================

Что бы игрок смотрел в сторону направляния движения, необходимо: в FixedUpdate

1) Создать переменную
private bool faceRight = true;

2)в FixedUpdate прописать:

 if (Input.GetAxis("Horizontal") > 0 && !faceRight)
            flip();
        else if (Input.GetAxis("Horizontal") < 0 && faceRight)
            flip();   

3) создать функцию Flip

 void flip()
    {
        faceRight = !faceRight;
        transform.localScale = new Vector3(transform.localScale.x * -1, transform.localScale.y, transform.localScale.z);
    }
====================================================================================================

Player Controller для движения и поворота модельки

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class PlayerController : MonoBehaviour {

    Rigidbody2D rb;
    public Sprite moveup;
    public Sprite movedown;
    public Sprite moveright;
    public Sprite moveleft;
    //private bool faceRight = true;

    // Use this for initialization
    public void MoveUp()
    {
        this.gameObject.GetComponent<SpriteRenderer>().sprite = moveup;
    }

    public void MoveDown()
    {
        this.gameObject.GetComponent<SpriteRenderer>().sprite = movedown;
    }

    public void MoveLeft()
    {
        //faceRight = !faceRight;
        this.gameObject.GetComponent<SpriteRenderer>().sprite = moveleft;
        //transform.localScale = new Vector3(transform.localScale.x * -1, transform.localScale.y, transform.localScale.z);
    }

    public void MoveRight()
    {
        this.gameObject.GetComponent<SpriteRenderer>().sprite = moveright;
    }


    void Start () {
        rb = GetComponent<Rigidbody2D>();
    }
	
	// Update is called once per frame
	void Update () {
        rb.velocity = new Vector2(Input.GetAxis("Horizontal") * 6f, Input.GetAxis("Vertical") * 6f); // Движение
        if (Input.GetAxis("Vertical") > 0)
            MoveUp();
        else if (Input.GetAxis("Vertical") < 0)
            MoveDown();
        else if (Input.GetAxis("Horizontal") < 0)
            MoveLeft();
        else if (Input.GetAxis("Horizontal") > 0)
            MoveRight();


        /* if (Input.GetAxis("Horizontal") > 0)
             MoveRight();
         else if (Input.GetAxis("Horizontal") < 0)
              MoveLeft(); */



    }

    void FixedUpdate()
    {
        

        // Блок кода для смены вида персонажа


       

    }

    


}
============================================================================================================================
ДВИЖЕНИЕ С ПОМОЩЬЮ МЫШИ https://www.youtube.com/watch?v=26qF22kg9MA

using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public class MouseController : MonoBehaviour {
    //
    public float speed;
    private bool move;
    public GameObject point;
    private Vector3 target;



	// Use this for initialization
	void Start () {
		
	}
	
	// Update is called once per frame
	void Update () {
		if(Input.GetMouseButton(0))
        {
            target = Camera.main.ScreenToWorldPoint(Input.mousePosition);
            target.z = transform.position.z;
            if (move == false)
                move = true;
            Instantiate(point, target, Quaternion.identity);

        }
        if (move == true)
            transform.position = Vector3.MoveTowards(transform.position, target, speed * Time.deltaTime);
	}
}
============================================================================================
СОЗДАНИЕ МЕНЮ https://www.youtube.com/watch?v=_MuBmOXjDGg

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using UnityEngine.SceneManagement;

public class UIManager : MonoBehaviour {

	// Use this for initialization
	void Start () {
		
	}
	
	// Update is called once per frame
	void Update () {
		
	}

    public void NewGame()
    {
        SceneManager.LoadScene(1);
    }

    public void Exit()
    {
        Application.Quit();
    }

}



=====================================================================================================













